@use 'hamburger';

// Hamburger
// ==================================================
@use 'sass:math';

.hamburger {
  padding: hamburger.$hamburger-padding-y hamburger.$hamburger-padding-x;
  display: inline-block;
  cursor: pointer;

  transition-property: opacity, filter;
  transition-duration: hamburger.$hamburger-hover-transition-duration;
  transition-timing-function: hamburger.$hamburger-hover-transition-timing-function;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  outline: none;
  margin: 0;
  overflow: visible;

  &:hover {
    @if hamburger.$hamburger-hover-use-filter == true {
      filter: hamburger.$hamburger-hover-filter;
    } @else {
      opacity: hamburger.$hamburger-hover-opacity;
    }
  }
}

.hamburger-box {
  width: hamburger.$hamburger-layer-width;
  height: hamburger.$hamburger-layer-height * 3 +
    hamburger.$hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: math.div(hamburger.$hamburger-layer-height, -2);

  &,
  &::before,
  &::after {
    width: hamburger.$hamburger-layer-width;
    height: hamburger.$hamburger-layer-height;
    background-color: hamburger.$hamburger-layer-color;
    border-radius: hamburger.$hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: '';
    display: block;
  }

  &::before {
    top: (
        hamburger.$hamburger-layer-spacing + hamburger.$hamburger-layer-height
      ) * -1;
  }

  &::after {
    bottom: (
        hamburger.$hamburger-layer-spacing + hamburger.$hamburger-layer-height
      ) * -1;
  }
}

.hamburger-black {
  @extend .hamburger-inner;
  &,
  &::before,
  &::after {
    width: hamburger.$hamburger-layer-width;
    height: hamburger.$hamburger-layer-height;
    background-color: black;
    border-radius: hamburger.$hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: ease;
  }
}
